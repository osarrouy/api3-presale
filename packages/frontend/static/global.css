html,
body {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0; }

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ol,
ul,
pre,
a {
  word-wrap: break-word; }

html,
body {
  background-color: #030303;
  color: #ffffff;
  font-family: "Inter", sans-serif;
  font-size: 15px;
  font-weight: 100;
  line-height: 1.3em; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 600;
  line-height: 1em;
  margin: 0; }

p {
  margin: 8px 0; }

a {
  color: #7be3cb;
  text-decoration: none;
  padding: 4px; }
  a:hover {
    background-color: #7be3cb;
    color: #030303; }

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0; }

/* Firefox */
input[type='number'] {
  -moz-appearance: textfield; }

h1.svelte-1hjjbzs, p.svelte-1hjjbzs {
  margin: 0 auto; }

h1.svelte-1hjjbzs {
  font-size: 2.8em;
  font-weight: 700;
  margin: 0 0 0.5em 0; }

p.svelte-1hjjbzs {
  margin: 1em auto; }

@media (min-width: 480px) {
  h1.svelte-1hjjbzs {
    font-size: 4em; } }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2Vycm9yLnN2ZWx0ZSIsInNvdXJjZXMiOlsiX2Vycm9yLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRleHBvcnQgbGV0IHN0YXR1c1xuXHRleHBvcnQgbGV0IGVycm9yXG5cblx0Y29uc3QgZGV2ID0gXCJkZXZlbG9wbWVudFwiID09PSAnZGV2ZWxvcG1lbnQnXG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXHRoMSwgcCB7XG5cdFx0bWFyZ2luOiAwIGF1dG87XG5cdH1cblxuXHRoMSB7XG5cdFx0Zm9udC1zaXplOiAyLjhlbTtcblx0XHRmb250LXdlaWdodDogNzAwO1xuXHRcdG1hcmdpbjogMCAwIDAuNWVtIDA7XG5cdH1cblxuXHRwIHtcblx0XHRtYXJnaW46IDFlbSBhdXRvO1xuXHR9XG5cblx0QG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG5cdFx0aDEge1xuXHRcdFx0Zm9udC1zaXplOiA0ZW07XG5cdFx0fVxuXHR9XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk55WXk5eWIzVjBaWE12WDJWeWNtOXlMbk4yWld4MFpTSmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU8wTkJRME03UlVGRFF5eGpRVUZqTzBOQlEyWTdPME5CUlVFN1JVRkRReXhuUWtGQlowSTdSVUZEYUVJc1owSkJRV2RDTzBWQlEyaENMRzFDUVVGdFFqdERRVU53UWpzN1EwRkZRVHRGUVVORExHZENRVUZuUWp0RFFVTnFRanM3UTBGRlFUdEZRVU5ETzBkQlEwTXNZMEZCWXp0RlFVTm1PME5CUTBRaUxDSm1hV3hsSWpvaWMzSmpMM0p2ZFhSbGN5OWZaWEp5YjNJdWMzWmxiSFJsSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVhHNWNkR2d4TENCd0lIdGNibHgwWEhSdFlYSm5hVzQ2SURBZ1lYVjBienRjYmx4MGZWeHVYRzVjZEdneElIdGNibHgwWEhSbWIyNTBMWE5wZW1VNklESXVPR1Z0TzF4dVhIUmNkR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYRzVjZEZ4MGJXRnlaMmx1T2lBd0lEQWdNQzQxWlcwZ01EdGNibHgwZlZ4dVhHNWNkSEFnZTF4dVhIUmNkRzFoY21kcGJqb2dNV1Z0SUdGMWRHODdYRzVjZEgxY2JseHVYSFJBYldWa2FXRWdLRzFwYmkxM2FXUjBhRG9nTkRnd2NIZ3BJSHRjYmx4MFhIUm9NU0I3WEc1Y2RGeDBYSFJtYjI1MExYTnBlbVU2SURSbGJUdGNibHgwWEhSOVhHNWNkSDFjYmlKZGZRPT0gKi88L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT57c3RhdHVzfTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48aDE+e3N0YXR1c308L2gxPlxuXG48cD57ZXJyb3IubWVzc2FnZX08L3A+XG5cbnsjaWYgZGV2ICYmIGVycm9yLnN0YWNrfVxuXHQ8cHJlPntlcnJvci5zdGFja308L3ByZT5cbnsvaWZ9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUMsaUJBQUUsQ0FBRSxDQUFDLGVBQUMsQ0FBQyxBQUNOLE1BQU0sQ0FBRSxDQUFDLENBQUMsSUFBSSxBQUNmLENBQUMsQUFFRCxFQUFFLGVBQUMsQ0FBQyxBQUNILFNBQVMsQ0FBRSxLQUFLLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3BCLENBQUMsQUFFRCxDQUFDLGVBQUMsQ0FBQyxBQUNGLE1BQU0sQ0FBRSxHQUFHLENBQUMsSUFBSSxBQUNqQixDQUFDLEFBRUQsTUFBTSxBQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUMxQixFQUFFLGVBQUMsQ0FBQyxBQUNILFNBQVMsQ0FBRSxHQUFHLEFBQ2YsQ0FBQyxBQUNGLENBQUMifQ== */
header.svelte-8857rl.svelte-8857rl {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  padding: 16px;
  height: 72px; }

header.svelte-8857rl img.logo.svelte-8857rl {
  position: absolute;
  left: 16px;
  top: 50%;
  transform: translateY(-50%);
  height: 40px; }

@media screen and (max-width: 800px) {
  header.svelte-8857rl img.logo.svelte-8857rl {
    visibility: hidden; } }

header.svelte-8857rl h1.svelte-8857rl {
  width: 100%;
  text-align: center; }

main.svelte-8857rl.svelte-8857rl {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: auto;
  padding: 16px;
  max-width: 980px; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2xheW91dC5zdmVsdGUiLCJzb3VyY2VzIjpbIl9sYXlvdXQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzdHlsZSBsYW5nPVwic2Nzc1wiPmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIGhlaWdodDogNzJweDsgfVxuICBoZWFkZXIgaW1nLmxvZ28ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAxNnB4O1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBoZWlnaHQ6IDQwcHg7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgaGVhZGVyIGltZy5sb2dvIHtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuOyB9IH1cbiAgaGVhZGVyIGgxIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxubWFpbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDE2cHg7XG4gIG1heC13aWR0aDogOTgwcHg7IH1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk55WXk5eWIzVjBaWE12WDJ4aGVXOTFkQzV6ZG1Wc2RHVWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UlVGRFJTeGhRVUZoTzBWQlEySXNiVUpCUVcxQ08wVkJRMjVDTEhWQ1FVRjFRanRGUVVOMlFpeHJRa0ZCYTBJN1JVRkRiRUlzWVVGQllUdEZRVU5pTEZsQlFWa3NSVUZCUlR0RlFVTmtPMGxCUTBVc2EwSkJRV3RDTzBsQlEyeENMRlZCUVZVN1NVRkRWaXhSUVVGUk8wbEJRMUlzTWtKQlFUSkNPMGxCUXpOQ0xGbEJRVmtzUlVGQlJUdEpRVU5rTzAxQlEwVTdVVUZEUlN4clFrRkJhMElzUlVGQlJTeEZRVUZGTzBWQlF6VkNPMGxCUTBVc1YwRkJWenRKUVVOWUxHdENRVUZyUWl4RlFVRkZPenRCUVVWNFFqdEZRVU5GTEdGQlFXRTdSVUZEWWl4elFrRkJjMEk3UlVGRGRFSXNiVUpCUVcxQ08wVkJRMjVDTEhWQ1FVRjFRanRGUVVOMlFpeFpRVUZaTzBWQlExb3NZVUZCWVR0RlFVTmlMR2RDUVVGblFpeEZRVUZGSWl3aVptbHNaU0k2SW5OeVl5OXliM1YwWlhNdlgyeGhlVzkxZEM1emRtVnNkR1VpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKb1pXRmtaWElnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0J3WVdSa2FXNW5PaUF4Tm5CNE8xeHVJQ0JvWldsbmFIUTZJRGN5Y0hnN0lIMWNiaUFnYUdWaFpHVnlJR2x0Wnk1c2IyZHZJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2JHVm1kRG9nTVRad2VEdGNiaUFnSUNCMGIzQTZJRFV3SlR0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb0xUVXdKU2s3WEc0Z0lDQWdhR1ZwWjJoME9pQTBNSEI0T3lCOVhHNGdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ09EQXdjSGdwSUh0Y2JpQWdJQ0FnSUdobFlXUmxjaUJwYldjdWJHOW5ieUI3WEc0Z0lDQWdJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmpzZ2ZTQjlYRzRnSUdobFlXUmxjaUJvTVNCN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5T3lCOVhHNWNibTFoYVc0Z2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdiV0Z5WjJsdU9pQmhkWFJ2TzF4dUlDQndZV1JrYVc1bk9pQXhObkI0TzF4dUlDQnRZWGd0ZDJsa2RHZzZJRGs0TUhCNE95QjlYRzVjYmk4cUl5QnpiM1Z5WTJWTllYQndhVzVuVlZKTVBWOXNZWGx2ZFhRdWMzWmxiSFJsTG1OemN5NXRZWEFnS2k4aVhYMD0gKi88L3N0eWxlPlxuXG48aGVhZGVyPlxuICA8aW1nIGNsYXNzPVwibG9nb1wiIHNyYz1cImxvZ28ucG5nXCIgYWx0PVwiQVBJM1wiIC8+XG4gIDxoMT5BUEkzIEdvdmVybmFuY2UgRGlzdHJpYnV0aW9uPC9oMT5cbjwvaGVhZGVyPlxuXG48bWFpbj5cbiAgPHNsb3QgLz5cbjwvbWFpbj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBbUIsTUFBTSw0QkFBQyxDQUFDLEFBQ3pCLE9BQU8sQ0FBRSxJQUFJLENBQ2IsV0FBVyxDQUFFLE1BQU0sQ0FDbkIsZUFBZSxDQUFFLE1BQU0sQ0FDdkIsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsT0FBTyxDQUFFLElBQUksQ0FDYixNQUFNLENBQUUsSUFBSSxBQUFFLENBQUMsQUFDZixvQkFBTSxDQUFDLEdBQUcsS0FBSyxjQUFDLENBQUMsQUFDZixRQUFRLENBQUUsUUFBUSxDQUNsQixJQUFJLENBQUUsSUFBSSxDQUNWLEdBQUcsQ0FBRSxHQUFHLENBQ1IsU0FBUyxDQUFFLFdBQVcsSUFBSSxDQUFDLENBQzNCLE1BQU0sQ0FBRSxJQUFJLEFBQUUsQ0FBQyxBQUNmLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFDcEMsb0JBQU0sQ0FBQyxHQUFHLEtBQUssY0FBQyxDQUFDLEFBQ2YsVUFBVSxDQUFFLE1BQU0sQUFBRSxDQUFDLEFBQUMsQ0FBQyxBQUM3QixvQkFBTSxDQUFDLEVBQUUsY0FBQyxDQUFDLEFBQ1QsS0FBSyxDQUFFLElBQUksQ0FDWCxVQUFVLENBQUUsTUFBTSxBQUFFLENBQUMsQUFFekIsSUFBSSw0QkFBQyxDQUFDLEFBQ0osT0FBTyxDQUFFLElBQUksQ0FDYixjQUFjLENBQUUsTUFBTSxDQUN0QixXQUFXLENBQUUsTUFBTSxDQUNuQixlQUFlLENBQUUsTUFBTSxDQUN2QixNQUFNLENBQUUsSUFBSSxDQUNaLE9BQU8sQ0FBRSxJQUFJLENBQ2IsU0FBUyxDQUFFLEtBQUssQUFBRSxDQUFDIn0= */
div.disclaimer.svelte-znzdc3 {
  font-size: 0.8rem;
  max-height: 50vh;
  overflow: scroll; }

div.checkbox.svelte-znzdc3 {
  margin: 16px 0; }

div.error.svelte-znzdc3 {
  color: #ff8080;
  font-size: 0.9rem;
  margin-top: 16px; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
input[type="button"].svelte-1nd71qi {
  background: #7be3cb;
  box-shadow: 0px 0px 10px #7ee4cc;
  border: none;
  outline: none;
  cursor: pointer;
  color: white;
  padding: 16px 32px;
  text-decoration: none;
  transform-style: preserve-3d;
  transition: all 0.3s ease-out; }

input[type="button"].svelte-1nd71qi:hover {
  transform: scale(0.95); }

input[type="button"].svelte-1nd71qi:active {
  transform: scale(0.4); }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnV0dG9uLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQnV0dG9uLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBpbXBvcnQgU3Bpbm5lciBmcm9tIFwiLi9TcGlubmVyLnN2ZWx0ZVwiO1xuICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tIFwic3ZlbHRlXCI7XG5cbiAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuICBleHBvcnQgbGV0IHZhbHVlID0gXCJcIjtcbiAgZXhwb3J0IGxldCBsb2FkaW5nID0gZmFsc2U7XG5cbiAgY29uc3QgX2NsaWNrID0gKCkgPT4ge1xuICAgIGRpc3BhdGNoKFwiY2xpY2tcIik7XG4gIH07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+aW5wdXRbdHlwZT1cImJ1dHRvblwiXSB7XG4gIGJhY2tncm91bmQ6ICM3YmUzY2I7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCAjN2VlNGNjO1xuICBib3JkZXI6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAxNnB4IDMycHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1vdXQ7IH1cbiAgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpob3ZlciB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTsgfVxuICBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjQpOyB9XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OeVl5OWpiMjF3YjI1bGJuUnpMMEoxZEhSdmJpNXpkbVZzZEdVaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdSVUZEUlN4dFFrRkJiVUk3UlVGRGJrSXNaME5CUVdkRE8wVkJRMmhETEZsQlFWazdSVUZEV2l4aFFVRmhPMFZCUTJJc1pVRkJaVHRGUVVObUxGbEJRVms3UlVGRFdpeHJRa0ZCYTBJN1JVRkRiRUlzY1VKQlFYRkNPMFZCUTNKQ0xEUkNRVUUwUWp0RlFVTTFRaXcyUWtGQk5rSXNSVUZCUlR0RlFVTXZRanRKUVVORkxITkNRVUZ6UWl4RlFVRkZPMFZCUXpGQ08wbEJRMFVzY1VKQlFYRkNMRVZCUVVVaUxDSm1hV3hsSWpvaWMzSmpMMk52YlhCdmJtVnVkSE12UW5WMGRHOXVMbk4yWld4MFpTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx1Y0hWMFczUjVjR1U5WENKaWRYUjBiMjVjSWwwZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lBak4ySmxNMk5pTzF4dUlDQmliM2d0YzJoaFpHOTNPaUF3Y0hnZ01IQjRJREV3Y0hnZ0l6ZGxaVFJqWXp0Y2JpQWdZbTl5WkdWeU9pQnViMjVsTzF4dUlDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJR052Ykc5eU9pQjNhR2wwWlR0Y2JpQWdjR0ZrWkdsdVp6b2dNVFp3ZUNBek1uQjRPMXh1SUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUhSeVlXNXpabTl5YlMxemRIbHNaVG9nY0hKbGMyVnlkbVV0TTJRN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMak56SUdWaGMyVXRiM1YwT3lCOVhHNGdJR2x1Y0hWMFczUjVjR1U5WENKaWRYUjBiMjVjSWwwNmFHOTJaWElnZTF4dUlDQWdJSFJ5WVc1elptOXliVG9nYzJOaGJHVW9NQzQ1TlNrN0lIMWNiaUFnYVc1d2RYUmJkSGx3WlQxY0ltSjFkSFJ2Ymx3aVhUcGhZM1JwZG1VZ2UxeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTUM0MEtUc2dmVnh1WEc0dktpTWdjMjkxY21ObFRXRndjR2x1WjFWU1REMUNkWFIwYjI0dWMzWmxiSFJsTG1OemN5NXRZWEFnS2k4aVhYMD0gKi88L3N0eWxlPlxuXG57I2lmIGxvYWRpbmd9XG4gIDxTcGlubmVyIC8+XG57OmVsc2V9XG4gIDxkaXYgb246Y2xpY2s9e19jbGlja30+XG4gICAgPGlucHV0IHR5cGU9XCJidXR0b25cIiB7dmFsdWV9IC8+XG4gIDwvZGl2Plxuey9pZn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFjbUIsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBQyxDQUFDLEFBQ3ZDLFVBQVUsQ0FBRSxPQUFPLENBQ25CLFVBQVUsQ0FBRSxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQ2hDLE1BQU0sQ0FBRSxJQUFJLENBQ1osT0FBTyxDQUFFLElBQUksQ0FDYixNQUFNLENBQUUsT0FBTyxDQUNmLEtBQUssQ0FBRSxLQUFLLENBQ1osT0FBTyxDQUFFLElBQUksQ0FBQyxJQUFJLENBQ2xCLGVBQWUsQ0FBRSxJQUFJLENBQ3JCLGVBQWUsQ0FBRSxXQUFXLENBQzVCLFVBQVUsQ0FBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQUFBRSxDQUFDLEFBQ2hDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxnQkFBQyxNQUFNLEFBQUMsQ0FBQyxBQUMxQixTQUFTLENBQUUsTUFBTSxJQUFJLENBQUMsQUFBRSxDQUFDLEFBQzNCLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxnQkFBQyxPQUFPLEFBQUMsQ0FBQyxBQUMzQixTQUFTLENBQUUsTUFBTSxHQUFHLENBQUMsQUFBRSxDQUFDIn0= */
.loader.svelte-ja39ic, .loader.svelte-ja39ic:before, .loader.svelte-ja39ic:after {
  background: #7be3cb;
  -webkit-animation: svelte-ja39ic-load1 1s infinite ease-in-out;
  animation: svelte-ja39ic-load1 1s infinite ease-in-out;
  width: 1em;
  height: 16px; }

.loader.svelte-ja39ic {
  color: #7be3cb;
  text-indent: -9999em;
  margin: 0 auto;
  position: relative;
  font-size: 11px;
  transform: translateZ(0);
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s; }

.loader.svelte-ja39ic:before, .loader.svelte-ja39ic:after {
  position: absolute;
  top: 0;
  content: ""; }

.loader.svelte-ja39ic:before {
  left: -1.5em;
  -webkit-animation-delay: -0.32s;
  animation-delay: -0.32s; }

.loader.svelte-ja39ic:after {
  left: 1.5em; }

@-webkit-keyframes svelte-ja39ic-load1 {
  0%, 80%, 100% {
    box-shadow: 0 0;
    height: 16px; }
  40% {
    box-shadow: 0 -8px;
    height: 24px; } }

@keyframes svelte-ja39ic-load1 {
  0%, 80%, 100% {
    box-shadow: 0 0;
    height: 16px; }
  40% {
    box-shadow: 0 -8px;
    height: 24px; } }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Bpbm5lci5zdmVsdGUiLCJzb3VyY2VzIjpbIlNwaW5uZXIuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzdHlsZSBsYW5nPVwic2Nzc1wiPi5sb2FkZXIsXG4ubG9hZGVyOmJlZm9yZSxcbi5sb2FkZXI6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiAjN2JlM2NiO1xuICAtd2Via2l0LWFuaW1hdGlvbjogbG9hZDEgMXMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIGFuaW1hdGlvbjogbG9hZDEgMXMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMTZweDsgfVxuXG4ubG9hZGVyIHtcbiAgY29sb3I6ICM3YmUzY2I7XG4gIHRleHQtaW5kZW50OiAtOTk5OWVtO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDExcHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjE2cztcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xNnM7IH1cblxuLmxvYWRlcjpiZWZvcmUsXG4ubG9hZGVyOmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGNvbnRlbnQ6IFwiXCI7IH1cblxuLmxvYWRlcjpiZWZvcmUge1xuICBsZWZ0OiAtMS41ZW07XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMC4zMnM7XG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMzJzOyB9XG5cbi5sb2FkZXI6YWZ0ZXIge1xuICBsZWZ0OiAxLjVlbTsgfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZDEge1xuICAwJSxcbiAgODAlLFxuICAxMDAlIHtcbiAgICBib3gtc2hhZG93OiAwIDA7XG4gICAgaGVpZ2h0OiAxNnB4OyB9XG4gIDQwJSB7XG4gICAgYm94LXNoYWRvdzogMCAtOHB4O1xuICAgIGhlaWdodDogMjRweDsgfSB9XG5cbkBrZXlmcmFtZXMgbG9hZDEge1xuICAwJSxcbiAgODAlLFxuICAxMDAlIHtcbiAgICBib3gtc2hhZG93OiAwIDA7XG4gICAgaGVpZ2h0OiAxNnB4OyB9XG4gIDQwJSB7XG4gICAgYm94LXNoYWRvdzogMCAtOHB4O1xuICAgIGhlaWdodDogMjRweDsgfSB9XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OeVl5OWpiMjF3YjI1bGJuUnpMMU53YVc1dVpYSXVjM1psYkhSbElsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPenM3UlVGSFJTeHRRa0ZCYlVJN1JVRkRia0lzWjBSQlFXZEVPMFZCUTJoRUxIZERRVUYzUXp0RlFVTjRReXhWUVVGVk8wVkJRMVlzV1VGQldTeEZRVUZGT3p0QlFVVm9RanRGUVVORkxHTkJRV003UlVGRFpDeHZRa0ZCYjBJN1JVRkRjRUlzWTBGQll6dEZRVU5rTEd0Q1FVRnJRanRGUVVOc1FpeGxRVUZsTzBWQlIyWXNkMEpCUVhkQ08wVkJRM2hDTEN0Q1FVRXJRanRGUVVNdlFpeDFRa0ZCZFVJc1JVRkJSVHM3UVVGRk0wSTdPMFZCUlVVc2EwSkJRV3RDTzBWQlEyeENMRTFCUVUwN1JVRkRUaXhYUVVGWExFVkJRVVU3TzBGQlJXWTdSVUZEUlN4WlFVRlpPMFZCUTFvc0swSkJRU3RDTzBWQlF5OUNMSFZDUVVGMVFpeEZRVUZGT3p0QlFVVXpRanRGUVVORkxGZEJRVmNzUlVGQlJUczdRVUZGWmp0RlFVTkZPenM3U1VGSFJTeGxRVUZsTzBsQlEyWXNXVUZCV1N4RlFVRkZPMFZCUTJoQ08wbEJRMFVzYTBKQlFXdENPMGxCUTJ4Q0xGbEJRVmtzUlVGQlJTeEZRVUZGT3p0QlFWSndRanRGUVVORk96czdTVUZIUlN4bFFVRmxPMGxCUTJZc1dVRkJXU3hGUVVGRk8wVkJRMmhDTzBsQlEwVXNhMEpCUVd0Q08wbEJRMnhDTEZsQlFWa3NSVUZCUlN4RlFVRkZJaXdpWm1sc1pTSTZJbk55WXk5amIyMXdiMjVsYm5SekwxTndhVzV1WlhJdWMzWmxiSFJsSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUxteHZZV1JsY2l4Y2JpNXNiMkZrWlhJNlltVm1iM0psTEZ4dUxteHZZV1JsY2pwaFpuUmxjaUI3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ00zWW1VelkySTdYRzRnSUMxM1pXSnJhWFF0WVc1cGJXRjBhVzl1T2lCc2IyRmtNU0F4Y3lCcGJtWnBibWwwWlNCbFlYTmxMV2x1TFc5MWREdGNiaUFnWVc1cGJXRjBhVzl1T2lCc2IyRmtNU0F4Y3lCcGJtWnBibWwwWlNCbFlYTmxMV2x1TFc5MWREdGNiaUFnZDJsa2RHZzZJREZsYlR0Y2JpQWdhR1ZwWjJoME9pQXhObkI0T3lCOVhHNWNiaTVzYjJGa1pYSWdlMXh1SUNCamIyeHZjam9nSXpkaVpUTmpZanRjYmlBZ2RHVjRkQzFwYm1SbGJuUTZJQzA1T1RrNVpXMDdYRzRnSUcxaGNtZHBiam9nTUNCaGRYUnZPMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRGd2VEdGNiaUFnTFhkbFltdHBkQzEwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZvb01DazdYRzRnSUMxdGN5MTBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVm9vTUNrN1hHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV2lnd0tUdGNiaUFnTFhkbFltdHBkQzFoYm1sdFlYUnBiMjR0WkdWc1lYazZJQzB3TGpFMmN6dGNiaUFnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF0TUM0eE5uTTdJSDFjYmx4dUxteHZZV1JsY2pwaVpXWnZjbVVzWEc0dWJHOWhaR1Z5T21GbWRHVnlJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0IwYjNBNklEQTdYRzRnSUdOdmJuUmxiblE2SUZ3aVhDSTdJSDFjYmx4dUxteHZZV1JsY2pwaVpXWnZjbVVnZTF4dUlDQnNaV1owT2lBdE1TNDFaVzA3WEc0Z0lDMTNaV0pyYVhRdFlXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBdE1DNHpNbk03WEc0Z0lHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ0xUQXVNekp6T3lCOVhHNWNiaTVzYjJGa1pYSTZZV1owWlhJZ2UxeHVJQ0JzWldaME9pQXhMalZsYlRzZ2ZWeHVYRzVBYTJWNVpuSmhiV1Z6SUd4dllXUXhJSHRjYmlBZ01DVXNYRzRnSURnd0pTeGNiaUFnTVRBd0pTQjdYRzRnSUNBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F3TzF4dUlDQWdJR2hsYVdkb2REb2dNVFp3ZURzZ2ZWeHVJQ0EwTUNVZ2UxeHVJQ0FnSUdKdmVDMXphR0ZrYjNjNklEQWdMVGh3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJREkwY0hnN0lIMGdmVnh1WEc0dktpTWdjMjkxY21ObFRXRndjR2x1WjFWU1REMVRjR2x1Ym1WeUxuTjJaV3gwWlM1amMzTXViV0Z3SUNvdklsMTkgKi88L3N0eWxlPlxuXG48ZGl2IGNsYXNzPVwibG9hZGVyXCI+TG9hZGluZy4uLjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFtQixxQkFBTyxDQUMxQixxQkFBTyxPQUFPLENBQ2QscUJBQU8sTUFBTSxBQUFDLENBQUMsQUFDYixVQUFVLENBQUUsT0FBTyxDQUNuQixpQkFBaUIsQ0FBRSxtQkFBSyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUNoRCxTQUFTLENBQUUsbUJBQUssQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FDeEMsS0FBSyxDQUFFLEdBQUcsQ0FDVixNQUFNLENBQUUsSUFBSSxBQUFFLENBQUMsQUFFakIsT0FBTyxjQUFDLENBQUMsQUFDUCxLQUFLLENBQUUsT0FBTyxDQUNkLFdBQVcsQ0FBRSxPQUFPLENBQ3BCLE1BQU0sQ0FBRSxDQUFDLENBQUMsSUFBSSxDQUNkLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLFNBQVMsQ0FBRSxJQUFJLENBQ2YsU0FBUyxDQUFFLFdBQVcsQ0FBQyxDQUFDLENBQ3hCLHVCQUF1QixDQUFFLE1BQU0sQ0FDL0IsZUFBZSxDQUFFLE1BQU0sQUFBRSxDQUFDLEFBRTVCLHFCQUFPLE9BQU8sQ0FDZCxxQkFBTyxNQUFNLEFBQUMsQ0FBQyxBQUNiLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLEdBQUcsQ0FBRSxDQUFDLENBQ04sT0FBTyxDQUFFLEVBQUUsQUFBRSxDQUFDLEFBRWhCLHFCQUFPLE9BQU8sQUFBQyxDQUFDLEFBQ2QsSUFBSSxDQUFFLE1BQU0sQ0FDWix1QkFBdUIsQ0FBRSxNQUFNLENBQy9CLGVBQWUsQ0FBRSxNQUFNLEFBQUUsQ0FBQyxBQUU1QixxQkFBTyxNQUFNLEFBQUMsQ0FBQyxBQUNiLElBQUksQ0FBRSxLQUFLLEFBQUUsQ0FBQyxBQUVoQixtQkFBbUIsbUJBQU0sQ0FBQyxBQUN4QixFQUFFLENBQ0YsR0FBRyxDQUNILElBQUksQUFBQyxDQUFDLEFBQ0osVUFBVSxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQ2YsTUFBTSxDQUFFLElBQUksQUFBRSxDQUFDLEFBQ2pCLEdBQUcsQUFBQyxDQUFDLEFBQ0gsVUFBVSxDQUFFLENBQUMsQ0FBQyxJQUFJLENBQ2xCLE1BQU0sQ0FBRSxJQUFJLEFBQUUsQ0FBQyxBQUFDLENBQUMsQUFFckIsV0FBVyxtQkFBTSxDQUFDLEFBQ2hCLEVBQUUsQ0FDRixHQUFHLENBQ0gsSUFBSSxBQUFDLENBQUMsQUFDSixVQUFVLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FDZixNQUFNLENBQUUsSUFBSSxBQUFFLENBQUMsQUFDakIsR0FBRyxBQUFDLENBQUMsQUFDSCxVQUFVLENBQUUsQ0FBQyxDQUFDLElBQUksQ0FDbEIsTUFBTSxDQUFFLElBQUksQUFBRSxDQUFDLEFBQUMsQ0FBQyJ9 */
.toasts {
  border-radius: 3px;
  list-style: none;
  position: fixed;
  top: 0;
  right: 0;
  padding: 0;
  margin: 0;
  z-index: 9999; }

.svelte-1ywayyo.toasts > .toast.svelte-1ywayyo.svelte-1ywayyo {
  border-radius: 3px;
  position: relative;
  margin: 8px;
  min-width: 20vw;
  position: relative;
  -webkit-animation: svelte-1ywayyo-animate-in 600ms forwards;
  animation: svelte-1ywayyo-animate-in 600ms forwards;
  color: #fff; }

.svelte-1ywayyo.toasts > .toast.svelte-1ywayyo > .content.svelte-1ywayyo {
  padding: 1vw;
  display: block;
  font-weight: 500; }

.svelte-1ywayyo.toasts > .toast.svelte-1ywayyo > .progress.svelte-1ywayyo {
  position: absolute;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.3);
  height: 6px;
  width: 100%;
  -webkit-animation-name: svelte-1ywayyo-shrink;
  animation-name: svelte-1ywayyo-shrink;
  -webkit-animation-timing-function: linear;
  animation-timing-function: linear;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards; }

.svelte-1ywayyo.toasts > .toast.svelte-1ywayyo.svelte-1ywayyo:before, .svelte-1ywayyo.toasts > .toast.svelte-1ywayyo.svelte-1ywayyo:after {
  content: "";
  position: absolute;
  z-index: -1;
  top: 50%;
  bottom: 0;
  left: 1vw;
  right: 1vw;
  border-radius: 100px / 10px; }

.svelte-1ywayyo.toasts > .toast.svelte-1ywayyo.svelte-1ywayyo:after {
  right: 1vw;
  left: auto;
  transform: skew(8deg) rotate(3deg); }

@-webkit-keyframes svelte-1ywayyo-animate-in {
  0%, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    transform: translate3d(3000px, 0, 0); }
  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0); }
  75% {
    transform: translate3d(10px, 0, 0); }
  90% {
    transform: translate3d(-5px, 0, 0); }
  to {
    transform: none; } }

@keyframes svelte-1ywayyo-animate-in {
  0%, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    transform: translate3d(3000px, 0, 0); }
  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0); }
  75% {
    transform: translate3d(10px, 0, 0); }
  90% {
    transform: translate3d(-5px, 0, 0); }
  to {
    transform: none; } }

@-webkit-keyframes svelte-1ywayyo-shrink {
  0% {
    width: 98vw; }
  100% {
    width: 0; } }

@keyframes svelte-1ywayyo-shrink {
  0% {
    width: 98vw; }
  100% {
    width: 0; } }

@media (min-width: 480px) {
  @-webkit-keyframes svelte-1ywayyo-animate-in {
    0%, 60%, 75%, 90%, to {
      -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
    0% {
      opacity: 0;
      transform: translate3d(3000px, 0, 0); }
    60% {
      opacity: 1;
      transform: translate3d(-25px, 0, 0); }
    75% {
      transform: translate3d(10px, 0, 0); }
    90% {
      transform: translate3d(-5px, 0, 0); }
    to {
      transform: none; } }
  @keyframes svelte-1ywayyo-animate-in {
    0%, 60%, 75%, 90%, to {
      -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
    0% {
      opacity: 0;
      transform: translate3d(3000px, 0, 0); }
    60% {
      opacity: 1;
      transform: translate3d(-25px, 0, 0); }
    75% {
      transform: translate3d(10px, 0, 0); }
    90% {
      transform: translate3d(-5px, 0, 0); }
    to {
      transform: none; } }
  @-webkit-keyframes svelte-1ywayyo-shrink {
    0% {
      width: 40vw; }
    100% {
      width: 0; } }
  @keyframes svelte-1ywayyo-shrink {
    0% {
      width: 40vw; }
    100% {
      width: 0; } } }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
div.disclaimer.svelte-19en51n {
  font-size: 0.8rem;
  max-height: 50vh;
  overflow: scroll; }

div.checkbox.svelte-19en51n {
  margin: 16px 0; }

div.error.svelte-19en51n {
  color: #ff8080; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
section.svelte-1l3wc40.svelte-1l3wc40 {
  text-align: center;
  margin: 16px 0;
  width: 100%; }

section.svelte-1l3wc40 h2.svelte-1l3wc40 {
  border-bottom: 1px solid #7be3cb;
  text-align: left;
  margin: 8px 0 16px 0;
  padding-bottom: 8px; }

section.svelte-1l3wc40 p.svelte-1l3wc40 {
  text-align: left; }

section.welcome.svelte-1l3wc40 p.svelte-1l3wc40 {
  text-align: center; }

section.error.svelte-1l3wc40.svelte-1l3wc40 {
  min-height: 2.5rem; }

section.error.svelte-1l3wc40 p.svelte-1l3wc40 {
  color: #ff8080;
  font-size: 0.9em;
  text-align: center; }

section.svelte-1l3wc40 div.dashboard.svelte-1l3wc40 {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%; }

section.svelte-1l3wc40 div.form.svelte-1l3wc40 {
  display: flex;
  align-items: center;
  justify-content: space-between; }

section.svelte-1l3wc40 div.form input[type="number"].svelte-1l3wc40 {
  display: block;
  background: rgba(123, 227, 203, 0.2);
  border: none;
  border-bottom: 1px solid #7be3cb;
  outline: none;
  cursor: pointer;
  color: #ffffff;
  padding: 16px; }

section.svelte-1l3wc40 div.form div.svelte-1l3wc40 {
  display: flex;
  align-items: center;
  justify-content: center; }

section.svelte-1l3wc40 div.form div span.svelte-1l3wc40 {
  position: relative;
  left: calc(-30px - 16px); }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
